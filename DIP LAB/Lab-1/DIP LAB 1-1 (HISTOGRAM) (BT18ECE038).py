# -*- coding: utf-8 -*-
"""DIP.ipynb

Automatically generated by google colab

BT18ECE038 Gokul kumar muvvala

LAB 1 Histogram equilization



# Histogram equilization
"""

import numpy as np
h=np.array([[52,55,61,59,79,61,76,61],
[62,59,55,104,94,85,59,71],
[63,65,66,113,144,104,63,72],
[64,70,70,126,154,109,71,69],
[67,73,68,106,122,88,68,68],
[68,79,60,70,77,66,58,75],
[69,85,64,58,55,61,65,83],
[70,87,69,68,65,73,78,90],
])
h

from matplotlib import pyplot as plt
plt.imshow(h, cmap = 'gray')
plt.xticks([]), plt.yticks([])
plt.show()

unique_elements, counts_elements = np.unique(h, return_counts=True)
for val,count in zip(unique_elements, counts_elements):
    print(val,count)

hist=np.asarray((unique_elements, counts_elements))
#converting element,count into array 
print(hist)
print(hist[0][:])
print(hist[1][:])

cdf=hist[1][:].cumsum()
print(cdf)
print(cdf.min(),len(cdf))

out=[]
for i in range(len(cdf)):
    eq=round(((cdf[i]-1)/63)*255)
    out.append(eq)

h_eq=np.uint8(np.asarray(out))
h_eq

hist[0][:]    #creating histogram

kv = {hist[0][i]: h_eq[i] for i in range(len(h_eq))}
print(kv)
print()
print(kv.get(55),type(kv.get(55)))
print()
print(kv[55])

g=h
print(g[1][1])
print(g)

for i in range(8): 
    for j in range(8): 
            b=kv.get(g[i][j])
            g[i][j]=b
             #b=kv.get(g[i,j])
            #g[i,j]=b

print(g)  #printing an array

plt.imshow(g, cmap = 'gray')
plt.xticks([]), plt.yticks([])
plt.show()



"""# Bit Plane Slicing"""

#Import required library
import cv2
import numpy as np
from matplotlib import pyplot as plt
import urllib
import cv2

img = cv2.imread('lena.jpg')
im = cv2.imread('lena.jpg',cv2.IMREAD_GRAYSCALE)
#cv2.imshow('image',im)
plt.imshow(img, cmap = 'gray')
plt.show()

img

gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
print(gray)
print(gray.shape)
print(gray[1][1])

plt.imshow(gray, cmap = 'gray')
plt.show()

img

def convertToBinary(my_dec):
    l=[]
    while my_dec>0:
        #print(my_dec)
        rem=my_dec%2
        my_dec=my_dec//2
        #print(my_dec)
        l.append(rem)
        #print(l)         
    l.reverse()
    new=np.zeros(8 -len(l))
    ow=np.append(new,l)
    return ow

k=convertToBinary(2)
print(k)
k=convertToBinary(200)
print(k,type(k))

out=[]
for i in range(gray.shape[0]):
    for j in range(gray.shape[1]):
        #print(img[i][j])
        outp=convertToBinary(gray[i][j])
        out.append(outp)

print(outp,outp[1])
#out

jv=np.asarray(out)
print(jv,jv.shape)
print(jv[0][1],jv[1][1])

from IPython.display import Image
Image(url='https://i2.wp.com/theailearner.com/wp-content/uploads/2019/01/bit-plane-slicing.png?w=662&ssl=1')

one = np.array([int(i[0]) for i in jv],dtype = np.uint8).reshape(img.shape[0],img.shape[1])
two= np.array([int(i[1]) for i in jv],dtype = np.uint8).reshape(img.shape[0],img.shape[1])
three = np.array([int(i[2]) for i in jv],dtype = np.uint8).reshape(img.shape[0],img.shape[1])
four = np.array([int(i[3]) for i in jv],dtype = np.uint8).reshape(img.shape[0],img.shape[1])
five = np.array([int(i[4]) for i in jv],dtype = np.uint8).reshape(img.shape[0],img.shape[1])
six = np.array([int(i[5]) for i in jv],dtype = np.uint8).reshape(img.shape[0],img.shape[1])
seven= np.array([int(i[6]) for i in jv],dtype = np.uint8).reshape(img.shape[0],img.shape[1])
eight = np.array([int(i[7]) for i in jv],dtype = np.uint8) .reshape(img.shape[0],img.shape[1])

print(one,two,three)

plt.imshow(one, cmap = 'gray')
plt.show()

plt.imshow(one, cmap = 'gray')
plt.title("1st plane")
plt.show()
plt.imshow(two, cmap = 'gray')
plt.title("2nd plane")
plt.show()

plt.imshow(three, cmap = 'gray')
plt.title("3rd plane")
plt.show()
plt.imshow(four, cmap = 'gray')
plt.title("4th plane")
plt.show()

plt.imshow(five, cmap = 'gray')
plt.title("5th plane")
plt.show()
plt.imshow(six, cmap = 'gray')
plt.title("6th plane")
plt.show()

plt.imshow(seven, cmap = 'gray')
plt.title("7th plane")
plt.show()
plt.imshow(eight, cmap = 'gray')
plt.title("8th plane")
plt.show()